package tablepkg;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Shiro
 */

import main.Login;
import datahandle.Database;
import java.awt.event.KeyEvent;
import java.sql.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.*;
import javax.swing.table.DefaultTableModel;

public class Tables extends javax.swing.JFrame {

    /**
     * Creates new form Tables
     */
    public Tables() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    
    private Database db;
    private Integer flag;
    
    
    public void filltable() {
        fillteaching(teachtbl1);
        fillnonteaching(nonteachtbl);
    }
    
    public void fillteaching(JTable tableFrame){
        try {
            //DefaultTableModel model = (DefaultTableModel) tableFrame.getModel();
            
            Object[] headers = new Object[tableFrame.getColumnCount()];
            for (int i = 0; i < tableFrame.getColumnCount(); i++) {
                headers[i] = tableFrame.getColumnName(i);
            }
            
            DefaultTableModel model = new DefaultTableModel(headers, 0);          
            
            tableFrame.setModel(model);
            
            String query;
            
            db = new Database();
            
            query = "SELECT * FROM teachingdata_table";
            Statement stmt = db.conn.createStatement();
            ResultSet rs = stmt.executeQuery(query);
            
                int ID = 0;
                int VL = 0, SIL = 0;
                String name, dateEmp, position, status, college;
            
            while(rs.next()){
                
                
                ID = rs.getInt("id");
                name = rs.getString("fam_name")  + ", "  + rs.getString("given_name") + " " + rs.getString("mi") +".";
                position = rs.getString("position");
                status = rs.getString("status");
                college = rs.getString("college");
                dateEmp = rs.getString("date_employment");
                VL = rs.getInt("vl");
                SIL = rs.getInt("sil");
               // sVL = rs.getString("vl") + " DAY(S)";
               // sSIL = rs.getString("sil") + " DAY(S)";
               // leaves = rs.getString("leave_from")  + " -> " + rs.getString("leave_to");
                //email = rs.getString("email");
                
                model.addRow(new Object[]{ID, name,
                     position, status,college,dateEmp,VL,SIL});
                
            }
            
            rs.close();
            stmt.close();
            db.closeConn();
        } catch (SQLException ex) {
            Logger.getLogger(Tables.class.getName()).log(Level.SEVERE, null, ex);
            ex.printStackTrace(System.err);

            JOptionPane.showMessageDialog(null, "SQLState: " + ((SQLException)ex).getSQLState()+ "\nError Code: " 
                    + ((SQLException)ex).getErrorCode() + "\nMessage: " + ex.getMessage());
        }
    }
    
    public void fillnonteaching(JTable tableFrame){
        try {
            //DefaultTableModel model = (DefaultTableModel) tableFrame.getModel();
            
            Object[] headers = new Object[tableFrame.getColumnCount()];
            for (int i = 0; i < tableFrame.getColumnCount(); i++) {
                headers[i] = tableFrame.getColumnName(i);
            }
            
            DefaultTableModel model = new DefaultTableModel(headers, 0);          
            
            tableFrame.setModel(model);
            
            String query;
            
            db = new Database();
            
            query = "SELECT * FROM nonteachingdata_table";
            Statement stmt = db.conn.createStatement();
            ResultSet rs = stmt.executeQuery(query);
            
                int ID = 0;
                int VL = 0, SIL = 0;
                String name, dateEmp, position, status, college;
            
            while(rs.next()){
                              
                ID = rs.getInt("id");
                name = rs.getString("fam_name")  + ", "  + rs.getString("given_name")+ " " + rs.getString("mi") +"." ;
                position = rs.getString("position");
                status = rs.getString("status");
                college = rs.getString("college");
                dateEmp = rs.getString("date_employment");
                VL = rs.getInt("vl");
                SIL = rs.getInt("sil");
                
                model.addRow(new Object[]{ID, name,
                     position, status,college,dateEmp,VL,SIL});
                
            }
            
            rs.close();
            stmt.close();
            db.closeConn();
        } catch (SQLException ex) {
            Logger.getLogger(Tables.class.getName()).log(Level.SEVERE, null, ex);
            ex.printStackTrace(System.err);

            JOptionPane.showMessageDialog(null, "SQLState: " + ((SQLException)ex).getSQLState()+ "\nError Code: " 
                    + ((SQLException)ex).getErrorCode() + "\nMessage: " + ex.getMessage());
        }
    }
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        searchfield = new javax.swing.JTextField();
        searchbtn = new javax.swing.JButton();
        newentrybtn = new javax.swing.JButton();
        logoutbtn = new javax.swing.JButton();
        tabbtbl = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        nonteachtbl = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        teachtbl1 = new javax.swing.JTable();
        refreshbutton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        nametxt = new javax.swing.JTextField();
        vltxt = new javax.swing.JTextField();
        siltxt = new javax.swing.JTextField();
        updtbtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        idtxtfield = new javax.swing.JTextField();
        radVL = new javax.swing.JRadioButton();
        radSIL = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        newleavestxt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Main Frame");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        searchfield.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        searchfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchfieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchfieldKeyReleased(evt);
            }
        });

        searchbtn.setText("Search");
        searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbtnActionPerformed(evt);
            }
        });
        searchbtn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchbtnKeyPressed(evt);
            }
        });

        newentrybtn.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        newentrybtn.setText("Add Entry");
        newentrybtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newentrybtnActionPerformed(evt);
            }
        });

        logoutbtn.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        logoutbtn.setText("Log Out");
        logoutbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutbtnActionPerformed(evt);
            }
        });

        tabbtbl.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N

        nonteachtbl.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        nonteachtbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NAME", "POSITION", "STATUS", "COLLEGE/DEPT", "DATE OF EMPLOYMENT", "VL ", "SIL "
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        nonteachtbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                nonteachtblMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(nonteachtbl);
        if (nonteachtbl.getColumnModel().getColumnCount() > 0) {
            nonteachtbl.getColumnModel().getColumn(6).setResizable(false);
            nonteachtbl.getColumnModel().getColumn(6).setPreferredWidth(50);
            nonteachtbl.getColumnModel().getColumn(7).setResizable(false);
            nonteachtbl.getColumnModel().getColumn(7).setPreferredWidth(50);
        }

        tabbtbl.addTab("Non-Teaching", jScrollPane2);

        teachtbl1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        teachtbl1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NAME", "POSITION", "STATUS", "COLLEGE/DEPT", "DATA OF EMPLOYMENT", "VL", "SIL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        teachtbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                teachtbl1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(teachtbl1);
        if (teachtbl1.getColumnModel().getColumnCount() > 0) {
            teachtbl1.getColumnModel().getColumn(0).setResizable(false);
            teachtbl1.getColumnModel().getColumn(0).setPreferredWidth(30);
            teachtbl1.getColumnModel().getColumn(6).setResizable(false);
            teachtbl1.getColumnModel().getColumn(6).setPreferredWidth(70);
            teachtbl1.getColumnModel().getColumn(7).setResizable(false);
            teachtbl1.getColumnModel().getColumn(7).setPreferredWidth(70);
        }

        tabbtbl.addTab("Teaching", jScrollPane3);

        refreshbutton.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        refreshbutton.setText("Refresh Table");
        refreshbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshbuttonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setText("Name:");

        nametxt.setEditable(false);
        nametxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nametxtActionPerformed(evt);
            }
        });

        vltxt.setEditable(false);

        siltxt.setEditable(false);

        updtbtn.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        updtbtn.setText("Update Leave");
        updtbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updtbtnActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setText("ID:");

        idtxtfield.setEditable(false);

        radVL.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        radVL.setText("VL");

        radSIL.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        radSIL.setText("SIL");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setText("Days(s) Leave:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(searchbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(searchfield, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(refreshbutton)
                        .addGap(56, 56, 56)
                        .addComponent(newentrybtn, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(logoutbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(362, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(idtxtfield, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(vltxt, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(siltxt, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(14, 14, 14))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(radSIL)
                                    .addComponent(radVL)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(70, 70, 70)
                                        .addComponent(updtbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(83, 83, 83))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newleavestxt, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(65, 65, 65))))))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(tabbtbl, javax.swing.GroupLayout.PREFERRED_SIZE, 979, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(299, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refreshbutton)
                    .addComponent(newentrybtn)
                    .addComponent(logoutbtn))
                .addGap(98, 98, 98)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idtxtfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radVL)
                    .addComponent(vltxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radSIL)
                    .addComponent(siltxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newleavestxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70)
                .addComponent(updtbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(155, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addGap(61, 61, 61)
                    .addComponent(tabbtbl, javax.swing.GroupLayout.DEFAULT_SIZE, 566, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        refreshbutton.getAccessibleContext().setAccessibleName("Refresh");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void newentrybtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newentrybtnActionPerformed
        
        try {
            new forms.JFORM().setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(Tables.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_newentrybtnActionPerformed

    private void logoutbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutbtnActionPerformed
       int input = JOptionPane.showConfirmDialog(null, "Are you sure you want to logout??");
        if (input==0) {
        Login logframe = new Login();
        this.dispose();
        logframe.setVisible(true);
        }
    }//GEN-LAST:event_logoutbtnActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        int input = JOptionPane.showConfirmDialog(null, "Are you sure you would like to exit the application?");
        if (input==0) {
            System.exit(0);
        }
    }//GEN-LAST:event_formWindowClosing

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
            filltable();
            ButtonGroup btngroup0 = new ButtonGroup();
            btngroup0.add(radVL);
            btngroup0.add(radSIL);
            
           
                    
    }//GEN-LAST:event_formWindowOpened

    private void teachtbl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_teachtbl1MouseClicked
           
        // Displays the data on the Text Fields
            
            flag = 1;
           int row = teachtbl1.rowAtPoint(evt.getPoint());
           
               TableModel teachng = teachtbl1.getModel();
               StringBuffer sb = new StringBuffer();
               idtxtfield.setText(teachng.getValueAt(row, 0).toString());
               nametxt.setText(teachng.getValueAt(row, 1).toString());
               vltxt.setText(teachng.getValueAt(row, 6).toString());
               siltxt.setText(teachng.getValueAt(row, 7).toString());
           
       
           
    }//GEN-LAST:event_teachtbl1MouseClicked

    private void refreshbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshbuttonActionPerformed
        filltable();
    }//GEN-LAST:event_refreshbuttonActionPerformed

    private void searchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbtnActionPerformed
        try{
            db = new Database();
            
            String query, query2;
            boolean flag = false;
            boolean flag2 = false;
            
            query = "SELECT * FROM teachingdata_table WHERE fam_name LIKE '%"+searchfield.getText()+"%' OR given_name LIKE '%"+searchfield.getText()+"%'";
            Statement stmt = db.conn.createStatement();
            ResultSet rs = stmt.executeQuery(query);
            query2 = "SELECT * FROM nonteachingdata_table WHERE fam_name LIKE '%"+searchfield.getText()+"%' OR given_name LIKE '%"+searchfield.getText()+"%'";
            Statement stmt2 = db.conn.createStatement();
            ResultSet rs2 = stmt2.executeQuery(query2);
            
            
            DefaultTableModel model1 = null, model2 = null;
            
            if(rs.next()){
                flag = true;
                Object[] headers = new Object[teachtbl1.getColumnCount()];
                for (int i = 0; i < teachtbl1.getColumnCount(); i++) {
                        headers[i] = teachtbl1.getColumnName(i);
                }

                model1 = new DefaultTableModel(headers, 0);

                teachtbl1.setModel(model1);
          
               
            } if(rs2.next()){
                 flag2 = true;
                Object[] headers2 = new Object[nonteachtbl.getColumnCount()];
                for (int i = 0; i < nonteachtbl.getColumnCount(); i++) {
                        headers2[i] = nonteachtbl.getColumnName(i);
                }

                model2 = new DefaultTableModel(headers2, 0);

                nonteachtbl.setModel(model2);
            } 
                else{
                JOptionPane.showMessageDialog(null, "No match found.");
            }
            if(flag){
                rs.beforeFirst();
                rs2.beforeFirst();
            
                int ID = 0;
                int VL = 0, SIL = 0;
                String name , dateEmp, position, status, college;
                
                while(rs.next()){ 
                ID = rs.getInt("id");
                name = rs.getString("fam_name")  + ", "  + rs.getString("given_name") + " " + rs.getString("mi") +".";
                position = rs.getString("position");
                status = rs.getString("status");
                college = rs.getString("college");
                dateEmp = rs.getString("date_employment");
                VL = rs.getInt("vl");
                SIL = rs.getInt("sil");
  
                model1.addRow(new Object[]{ID, name,
                     position, status,college,dateEmp,VL,SIL});

                 }
 
            }
            
            if(flag2){
                rs2.beforeFirst();
                int ID2 = 0;
                int VL2 = 0, SIL2 = 0;
                String name2 = null, dateEmp2, position2, status2, college2;
                
                while(rs2.next()){
                ID2 = rs2.getInt("id");
                name2 = rs2.getString("fam_name")  + ", "  + rs2.getString("given_name")+ " " + rs2.getString("mi") +"." ;
                position2 = rs2.getString("position");
                status2 = rs2.getString("status");
                college2 = rs2.getString("college");
                dateEmp2 = rs2.getString("date_employment");
                VL2 = rs2.getInt("vl");
                SIL2 = rs2.getInt("sil");
                
                model2.addRow(new Object[]{ID2, name2,
                     position2, status2,college2,dateEmp2,VL2,SIL2});
                }
               
            } 
                
            rs2.close();
            stmt2.close(); 
            rs.close();
            stmt.close();
            db.closeConn();   
        } catch (SQLException ex) {
            Logger.getLogger(Tables.class.getName()).log(Level.SEVERE, null, ex);
            ex.printStackTrace(System.err);

            JOptionPane.showMessageDialog(null, "SQLState: " + ((SQLException)ex).getSQLState()+ "\nError Code: " 
                    + ((SQLException)ex).getErrorCode() + "\nMessage: " + ex.getMessage());
        }
    }//GEN-LAST:event_searchbtnActionPerformed
    
   
    private void updtbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updtbtnActionPerformed
         int input = JOptionPane.showConfirmDialog(null, "Are you sure you would like to update?");
            if (input==0) {
        try {
            db = new Database();
          String query,query2,update;  
          Statement stmt = db.conn.createStatement();
          
            String snewleave = newleavestxt.getText();
            int newleaves = Integer.parseInt(snewleave);
            String svl = vltxt.getText();
            String ssil = siltxt.getText();
            int vl = Integer.parseInt(svl);
            int sil = Integer.parseInt(ssil);
            
        
         if(flag == 1){

            
            if (radVL.isSelected()){
                if(newleaves <= vl){
                    if(vl > 0){
                        vl = vl - newleaves;
                    } else{
                        JOptionPane.showMessageDialog(null, "The employee already has 0 VLs left!");
                    }
                }else{
                         JOptionPane.showMessageDialog(null, "Must not exceed current VL!");
                }
            } else if(radSIL.isSelected()){
                if(newleaves <= sil){
                    if(sil > 0){
                        sil = sil - newleaves;
                    } else{
                        JOptionPane.showMessageDialog(null, "The employee already has 0 SILs left!");
                    }
                }else{
                        JOptionPane.showMessageDialog(null, "Must not exceed current SIL!");
                }   
            } else{
                        JOptionPane.showMessageDialog(null, "Please select the type of leave.");
            }   
             
            update = "UPDATE teachingdata_table SET vl='"+vl+"',sil='"+sil+"' WHERE `id` = "+idtxtfield.getText();
            stmt.executeUpdate(update);
        } else if(flag == 2){
           
           if (radVL.isSelected()){
                if(newleaves <= vl){
                    if(vl > 0){
                        vl = vl - newleaves;

                    } else{
                        JOptionPane.showMessageDialog(null, "The employee already has 0 VLs left!");
                    }
                }else{
                         JOptionPane.showMessageDialog(null, "Must not exceed current VL!");
                }
            } else if(radSIL.isSelected()){
                if(newleaves <=sil){
                    if(sil > 0){
                        sil = sil - newleaves;
                    } else{
                        JOptionPane.showMessageDialog(null, "The employee already has 0 SILs left!");
                    }
                }else{
                        JOptionPane.showMessageDialog(null, "Must not exceed current SIL!");
                }   
            }   else{
                        JOptionPane.showMessageDialog(null, "Please select the type of leave.");
            }   
          
            update = "UPDATE nonteachingdata_table SET vl='"+vl+"',sil='"+sil+"' WHERE `id` = "+idtxtfield.getText();
            stmt.executeUpdate(update);
        }
        
        } catch (SQLException ex) {
            Logger.getLogger(Tables.class.getName()).log(Level.SEVERE, null, ex);
            ex.printStackTrace(System.err);

            JOptionPane.showMessageDialog(null, "SQLState: " + ((SQLException)ex).getSQLState()+ "\nError Code: " 
                    + ((SQLException)ex).getErrorCode() + "\nMessage: " + ex.getMessage());
        }
        
        }
        filltable();
  
    }//GEN-LAST:event_updtbtnActionPerformed

    private void nonteachtblMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nonteachtblMousePressed
         flag = 2;
           int row = nonteachtbl.rowAtPoint(evt.getPoint());
           
               TableModel nonteachng = nonteachtbl.getModel();
              // StringBuffer sb = new StringBuffer();
               idtxtfield.setText(nonteachng.getValueAt(row, 0).toString());
               nametxt.setText(nonteachng.getValueAt(row, 1).toString());
               vltxt.setText(nonteachng.getValueAt(row, 6).toString());
               siltxt.setText(nonteachng.getValueAt(row, 7).toString());
    }//GEN-LAST:event_nonteachtblMousePressed

    private void searchbtnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchbtnKeyPressed
       //getRootPane().setDefaultButton(searchbtn);
    }//GEN-LAST:event_searchbtnKeyPressed

    private void searchfieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchfieldKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)        
        searchbtn.doClick();
    }//GEN-LAST:event_searchfieldKeyPressed

    private void nametxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nametxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nametxtActionPerformed

    private void searchfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchfieldKeyReleased
        
    }//GEN-LAST:event_searchfieldKeyReleased

   
    /**
     * @param args the command line arguments
     */

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tables.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tables.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tables.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tables.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
             
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tables().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField idtxtfield;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton logoutbtn;
    private javax.swing.JTextField nametxt;
    private javax.swing.JButton newentrybtn;
    private javax.swing.JTextField newleavestxt;
    private javax.swing.JTable nonteachtbl;
    private javax.swing.JRadioButton radSIL;
    private javax.swing.JRadioButton radVL;
    private javax.swing.JButton refreshbutton;
    private javax.swing.JButton searchbtn;
    private javax.swing.JTextField searchfield;
    private javax.swing.JTextField siltxt;
    private javax.swing.JTabbedPane tabbtbl;
    private javax.swing.JTable teachtbl1;
    private javax.swing.JButton updtbtn;
    private javax.swing.JTextField vltxt;
    // End of variables declaration//GEN-END:variables

    
    public void setuser(String rolsuser){
        
    }


}
